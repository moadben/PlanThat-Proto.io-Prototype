Task Scenarios:

Scenario 3:

What this task demonstrates: This task represents the process of creating a group, where the 

creator specifies; the group details, branches(sub-groups), and invites the people to access this 

group.

Evan has started planning a local improv festival. Evan has used PlanThat in the past, and as

a result Evan creates a new group on PlanThat for his event. He specifies the name of the 

event/group (ImprovThat), group password, date of event (May 32, 2016, a month in 

advance), location (Vision Theater and various streets), and a short description of the event 

in the app by filling in the corresponding fields. After pressing next, he’s brought to the 

branch page, where he makes branches for performers, stage tech, and volunteers. After 

the branches are made he clicks next, to go to the invite page. Evan then invites the 

majority of the participants through his Facebook friends list by searching their names and 

selecting them as they pop up within the app. However he can only invite friends who have 

used the app before through Facebook and therefore must share the previously defined 

group name and password to the rest of his desired teammates through external softwares 

such as email.


Scenario 2:

What this task demonstrates:  This task represents the process of a user who wants to not 

create a group, but join one. Then also demonstrates how a user communicates to others, and 

sells tickets.

Morgan wants to help in raising funds for a local animal shelter. She talks to the fundraiser 

coordinator over email and receives a group name and password, which she can use to 

send a join request. However, before she can join, she is required to either create a local 

account or sign in through Facebook. She creates an account, in the app, with her name, 

email, location and password. After she is signed in, she presses the join group button, 

taking her to the join-group password and searches for the group name in a search bar. 

When she finds the group, she clicks on the group where she reads the description (to 

verify the right group) and is required to enter the password, and then must wait for 

confirmation from the event creator. Once she is confirmed, she is assigned to the 

fundraising branch, where she can communicate with other fundraisers through the 

messenger section designated for the specific branch and can only be seen by them and the 

event coordinator. Morgan then gets a donor, and adds the amount donated into the 

PlanThat app amount tracker which updates a counter that keeps track of the amount 

raised by the group. No actual money is handled through the app, it is just tracked and 

Morgan then handles the money and proceeds with it according to her advised instructions 

(this does not involve the app).


Scenario 3:

What this task demonstrates: This task represents the process of a group owner wanting to 

communicate and make an adjustment to the event/group. It also demonstrates the purpose of 

the branch system.


Evan wants to inform everyone that the location has changed for his ImprovThat event to a 

larger venue. He opens the PlanThat app, where he lands on the main page (as he’s already 

signed in). He clicks scrolls through his active events and selects the ImprovThat event, 

taking him to the event page. He then presses the envelope icon at the upper right corner 

of the page, which takes him to the messenger page. He specifies the global branch from a 

drop down bar of channels, which includes the entirety of the event. He types the message 

in, informing everyone of the location change, and presses send. Evan also wants to 

specifically message the ticket selling branch, so he selects the ticket selling brach from the 

drop down bar of channels, and enters the message letting them know that there are an 

additional 20 tickets available and presses send. Due to the ticket amount change, he then 

hits the general options menu in the upper left corner of his screen and selects the modify 

group option, which can only be accessed by event creators. This takes him to the group 

info pages, which is the create group pages and changes the ticket limit, by re-specifying 

the tickets quantity field.


Software Prototype Changes

We make the software prototype interactive and made a drop down menu.  This allows users to easily access important functionality from any screen.
We got rid of the messages icon that was always present in the upper right corner.  Instead, we moved the messages functionality into the drop down menu to save space.
We moved the drop down menu into the top right corner, and made back button in the upper left corner.  It will let you move back menu pages and is necessary on iOS since there is no built in one.

We found that the main issues with the application were the labeling and feedback.
We improved the labeling by making the purpose of buttons clearer.  We overhauled the messages page by making it much easier to understand than our previous prototype.  It now has a group selector at the top and then very simple branch selector, and then the rest is just the message log and message input window.  We made this change because we felt it really streamlined the page.
We also added a search bar certain pages like the Add Team page. This will make it easier to find a group when there are a lot of events.
We removed the scrollbar from the create group page, and instead made it two pages instead.  The scrollbar was just unncessary clutter, now the user has to think about less things at a time.

For the feedback, we added things like a pop up menu to confirm to confirm the amount that a user has sold.
There are a lot more confirmation texts like a request sent popup for joining a group.  We really wanted to make sure that the user would think that his actions had an effect and didn't just do nothing.

All our buttons are the same consistent colour. And the button text is now clear based on feedback from the TA.